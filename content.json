[{"title":"个人建站学习","date":"2017-04-15T09:42:38.000Z","path":"2017/04/15/个人建站学习/","text":"总结整理自己过去一段时间所做的东西——用于记录、备忘和学习，也是个人建站历程，学习及注意到的一些东西。","tags":[{"name":"随笔","slug":"随笔","permalink":"https:noodle-xia.github.io/tags/随笔/"},{"name":"demo","slug":"demo","permalink":"https:noodle-xia.github.io/tags/demo/"},{"name":"建站","slug":"建站","permalink":"https:noodle-xia.github.io/tags/建站/"}]},{"title":"vue-cli多页面脚手架","date":"2017-03-20T13:24:42.000Z","path":"2017/03/20/My-New-Post/","text":"学习使用vue-cli多页面脚手架 关于vue-cliVue-cli是vue官方提供的一个命令行工具（vue-cli），可用于快速搭建大型单页应用。（之前体验学习vue.js一段时间，慢慢开始接触使用vue-cli多页面脚手架）。帮助你快速开始一个vue项目，其实其本质就是给你一套文件结构，包含基础的依赖库，你只需要npm install一下就可以安装。让你不需要为编译或其他琐碎的事情而浪费时间，这并不会限制到你的发挥。（看到有人好像是这么解释的，很赞同这个答案） 学习vue之旅相关学习博客链接:Vue2.0新手完全填坑攻略—从环境搭建到发布 使用方法12345678# install dependenciesnpm install# serve with hot reload at localhost:8080/module/index.htmlnpm run dev //运行# build for production with minificationnpm run build //打包 输入完命令npm run dev会自动启动浏览器，自动启动浏览器就会看到vue图标的界面了 如 npm run build是项目打包命令，运行这个命令后会生成可以进行上线的打包文件，这时候打开根目录（dist）下的index.html就可以直接看到你的项目效果了。在使用 atom 编辑时进一步认识atom编辑器与subline的区别，另外在打开IDE这一项时，使用atom打开项目需要安装 Vue 语法高亮的插件，使项目代码可读性更好。添加插件方法：在atom编辑页面选项栏中点击Packages，选择Settings View——&gt; Install Packages/Themes,然后搜索需要添加的插件，如图： 随笔哈哈 之前看博客教程里提到有需要填的坑，自己没在意，直接看下面的了，现在果然跳进去了，当自己试着打包别人做好的项目时，出现cannot find module &#39;clean-webpack-plugin&#39;里面确实提醒了少哪个插件下哪个。。哈哈慢慢来。。加油！ 下一步通过学习vue-cli多页面脚手架和别人的demo 尝试搭建自己的多页面个人主页","tags":[{"name":"随笔","slug":"随笔","permalink":"https:noodle-xia.github.io/tags/随笔/"},{"name":"vue","slug":"vue","permalink":"https:noodle-xia.github.io/tags/vue/"},{"name":"前端框架","slug":"前端框架","permalink":"https:noodle-xia.github.io/tags/前端框架/"}]},{"title":"vue学习体验（2）-笔记","date":"2017-03-13T14:29:40.000Z","path":"2017/03/13/vue学习体验（2）-笔记/","text":"之前练习了一些从模型数据到视图的单向绑定，这次运用 v-model指令实现视图到模型的一个传递，依然结合jQuery的一些实现方法进行比较，加深自己的理解。代码部分：123456789101112131415161718192021222324252627282930313233&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;02&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;app&quot;&gt; &lt;input type=&quot;text&quot; v-model=&quot;msg&quot;&gt; &lt;!--显示input输入的内容--&gt; &lt;h1&gt;&#123;&#123;msg&#125;&#125;&lt;/h1&gt;&lt;/div&gt;&lt;!--&lt;script type=&quot;text/javascript&quot; &gt; --&gt;&lt;!--//用jqury实现要达到的需求--&gt;&lt;!--//$(&apos;input&apos;).on(&apos;keydown&apos;,function (e) &#123; --&gt; &lt;!--//在jQuery中获取input元素--&gt; &lt;!--//其他获取方式 1、this 2、e.target --&gt;&lt;!--// console.log(e.target)--&gt; &lt;!--//获取Input的值 var val=e.target.value --&gt;&lt;!--// var val =$(this).val(); --&gt;&lt;!--// 或者 $(&apos;h1&apos;&apos;).html(val) --&gt;&lt;!--&#125;)--&gt;&lt;script src=&quot;vue.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt;var app=new Vue(&#123; el:&apos;#app&apos;, data:&#123; msg:&apos;0922&apos; &#125;&#125;)&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 理解及总结： 开始练习了一些是模型数据通过vue的data属性实现数据到vue的一个绑定，此时数据更新会被vue监听渲染给视图，现在运用的v-model指令则是实现了视图到vue实例化对象的一个数据传递，假若视图更新，vue就会捕捉到，就会传递给模型数据。（v-model的属性值是一个js作用域，也就是一个js环境，在其中添加属性值就是添加Vue实例化对象的变量。有点绕口。。。。哈哈哈）","tags":[{"name":"vue","slug":"vue","permalink":"https:noodle-xia.github.io/tags/vue/"},{"name":"前端框架","slug":"前端框架","permalink":"https:noodle-xia.github.io/tags/前端框架/"}]},{"title":"vue初体验","date":"2017-03-09T12:29:35.000Z","path":"2017/03/09/vue初体验/","text":"简单的学习了一点Vue（mvvm模型），通过与原生js和jQuery写法相比较体验Vue的方便，条理清晰，不会使项目显得杂乱。实现数据到视图的双向绑定。 代码部分：123456789101112131415161718192021222324252627282930313233--- &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;01&lt;/title&gt; &lt;script src=&quot;jquery-3.1.1.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;vue.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;a&quot;&gt;&#123;&#123;msg&#125;&#125;&lt;/div&gt; &lt;script type=&quot;text/javascript&quot;&gt; var data =&#123; msg:&quot;你绝望了么？？&quot; &#125; data.msg=&quot;致胜一击 只要心够决！！&quot; // data.msg=&quot;致胜一击 只要心够决！！&quot; // document.getElementById(&quot;a&quot;).innerHTML=data.msg; //原生js写法。。 // document.getElementById(&quot;a&quot;).innerHTML=data.msg; // $(&quot;#a&quot;).html(data.msg).html(data.msg) //jQury写法。。 //创建vue实例化对象，（vm对象——绑定视图和数据..） new Vue(&#123; //绑定视图 el:&quot;#a&quot;, //绑定数据 data:data, &#125;) data.msg=&quot;致胜一击 只要心够决！！&quot; &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;---","tags":[{"name":"vue","slug":"vue","permalink":"https:noodle-xia.github.io/tags/vue/"},{"name":"前端框架","slug":"前端框架","permalink":"https:noodle-xia.github.io/tags/前端框架/"}]},{"title":"hexo+github搭建个人博客","date":"2017-03-06T10:59:39.000Z","path":"2017/03/06/个人博客/","text":"个人博客更新日志&amp;也是使用hexo+github搭建个人博客遇到的一些问题及看法，同时在主题中添加了一些新东西。 开头因为追求新鲜开始自己尝试了七八个主题，开始使用的是相对简洁 Jacman,另外两个是Yilia 点击链接 、 yumemor 点击链接 ， 个人比较喜欢yumemor。我目前正在用的yilia，并添加了一些小插件。如果你崇尚简洁直观的话，推荐使用next或者是landscape-plus，使用的用户还有在github上star的都比较多。我开始搭建博客很顺利，也是在选用主题是花费了不少功夫，起初按照Jacman 这一主题一步步更新内容，修改样式，在主题themes文件中修改字体、文字及section的颜色、banner图片、微博秀等等。怎么搭建网上有很多教程，我不再累赘介绍，大多是在 cmd 命令行（或者 git shell 命令下完成）。以下是我认为需要注意的一些问题，也是我遇到的好多坑，还有自己修改的一些东西。 正文:更新主题命令及上传部署到github12cd themes/yiliagit pull origin master 在更改博客themes文件下的东西之后执行的命令，是主题的源文件更新，不是我们博客的更新。而hexo g 是更新博客命令。hexo new &quot;文件名&quot; 是新建文件名 hexo deploy（或hexo d）上传部署到github 。搭建完成之后，这几个命令也是我经常使用的， 学习使用了很长时间git应用，有时间总结一下经常用的的git命令，以便使用。。。。 遇到的问题：用git shell 命令hexo d）上传到github出错，总是出现需要输入用户名和密码。 解决办法在你博客根目录下的_config.yml中repository:修改为git@github.com形式 如： 1234deploy: type: git repository: git@github.com:noodle-xia/blog branch: master 在branch:中如果博客地址是yourname.github.io，分支名就是master使用另建的Repositorie就使用gh-pages。 博客中插入图片和音乐（1）、放在七牛上，需要先注册，上传图片生成链接，直接在文章中使用链接即可。（推荐使用这种，还拥有10G的免费存储图片资源。）（2）、放在本地文件首先在yourname.github.io目录下确认 _config.yml 中有post_asset_folder:true 。在博客根目录下执行1npm install https://github.com/CodeFalling/hexo-asset-image --save 然后再使用hexo new &#39;new&#39;创建新博客的时候，会在source/_posts里面创建.md文件的同时生成一个相同的名字的文件夹。把该文章中需要使用的图片放在该文件夹下即可。在博客中使用的时候用以下方式：123![图片描述](/文件夹名/你的图片名字.JPG)例如：![ ] (img/author.jpg) （3）、插入音乐可以使用网易云音乐，搜索你想要的歌曲，点击歌曲名字进入播放器页面，点击生成外链播放器；复制代码，直接粘贴到博文中即可，这样会显示一个网易的播放器。（4）、引入左边栏的音乐播放器我使用的是一款绚丽彩虹的音乐播放器插件——&gt;绚丽彩虹播放器里面有相关使用教程。复制代码块添加到themes\\yilia\\layout\\_partial\\left-col.ejs文件最下面即可。效果来源于demo。 引入天气同样将以下代码块加入themes\\yilia\\layout\\_partial\\left-col.ejs的第一个div中即可。12345678910111213141516171819&lt;!--天气开始--&gt;&lt;div id=&quot;tp-weather-widget&quot;&gt;&lt;/div&gt;&lt;script&gt;(function(T,h,i,n,k,P,a,g,e)&#123;g=function()&#123;P=h.createElement(i);a=h.getElementsByTagName(i)[0];P.src=k;P.charset=&quot;utf-8&quot;;P.async=1;a.parentNode.insertBefore(P,a)&#125;;T[&quot;ThinkPageWeatherWidgetObject&quot;]=n;T[n]||(T[n]=function()&#123;(T[n].q=T[n].q||[]).push(arguments)&#125;);T[n].l=+new Date();if(T.attachEvent)&#123;T.attachEvent(&quot;onload&quot;,g)&#125;else&#123;T.addEventListener(&quot;load&quot;,g,false)&#125;&#125;(window,document,&quot;script&quot;,&quot;tpwidget&quot;,&quot;//widget.thinkpage.cn/widget/chameleon.js&quot;))&lt;/script&gt;&lt;script&gt;tpwidget(&quot;init&quot;, &#123; &quot;flavor&quot;: &quot;slim&quot;, &quot;location&quot;: &quot;WM6N2PM3WY2K&quot;, &quot;geolocation&quot;: &quot;enabled&quot;, &quot;language&quot;: &quot;zh-chs&quot;, &quot;unit&quot;: &quot;c&quot;, &quot;theme&quot;: &quot;chameleon&quot;, &quot;container&quot;: &quot;tp-weather-widget&quot;, &quot;bubble&quot;: &quot;enabled&quot;, &quot;alarmType&quot;: &quot;badge&quot;, &quot;color&quot;: &quot;#FFFFFF&quot;, &quot;uid&quot;: &quot;U88B4B2797&quot;, &quot;hash&quot;: &quot;c9d7cb43b80ffece52c9a1ebbfbca65f&quot;&#125;);tpwidget(&quot;show&quot;);&lt;/script&gt;&lt;!--天气结束--&gt; 效果如图： 添加博客访问量在themes\\yilia\\layout\\_partial\\after_footer.ejs文件中第三个div之后（添加到什么地方好看自己决定）添加如下代码即可：12345678&lt;script async src=&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt; 本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot; style=&quot;color: blue;&quot;&gt;&lt;/span&gt;次&lt;/span&gt;&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt; 访客数&lt;span id=&quot;busuanzi_value_site_uv&quot; style=&quot;color: blue;&quot;&gt;&lt;/span&gt;人次&lt;/span&gt; css样式也可做修改，更多详细细节可以访问 不蒜子 不如。 Markdown文档编辑器在这里推荐两款markdown文档的编辑软件，一种是在本地的编辑器Haroopad，非常小众，左边编辑，右边实时预览效果，很轻便。（目前我使用的就是这种，之前打开编辑.md类的文件使用的是Editplus但很不方便，使用专门的markdown编辑器更快速见效）。 另一种是在线的编辑器MaHua，打开链接可以在线编辑。 打赏页面修改为不显示，常来看看就好，哈哈哈哈哈。。 随笔也可自己构建一个博客主题，分享然后再github上建一个仓库，别人再git clone 下来使用你的主题。经常不知道如何写文章，因为害怕写开头。。哈哈哈。。搭建博客，也是为了总结学过的知识，一方面可以提供交流，也因为总会忘，顺便巩固看过的东西，管理仓库，梳理技术。最后，遇到其他问题，欢迎提问交流~","tags":[{"name":"随笔","slug":"随笔","permalink":"https:noodle-xia.github.io/tags/随笔/"},{"name":"hexo","slug":"hexo","permalink":"https:noodle-xia.github.io/tags/hexo/"}]}]
<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[js二维数组]]></title>
      <url>https:noodle-xia.github.io/2017/10/16/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/</url>
      <content type="html"><![CDATA[<p>关于Js二维数组&amp; hexo使用时无法 hexo g 的问题<br><a id="more"></a></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>  前段时间在学习慕课网通过js制作一个 <code>2048小游戏</code>,因为开始制作时为每一个小格声明二维数组，为了加深理解，巩固基础知识，记录一下关于js的二维数组。</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文:"></a>正文:</h3><p><img src="http://onh2yw93k.bkt.clouddn.com/%E6%95%B0%E7%BB%84%E6%96%87%E5%AD%974.png" alt=""><br><img src="http://onh2yw93k.bkt.clouddn.com/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E8%A1%A8.png" alt=""><br>其实，一.二维数组的本质就是数组中的元素又是数组。在内存中二维数组是按照行主序进行存储，假如把二维数组的每一行看成一个整体，即看成一个数组中的一个元素，那么整个二维数组就是一个一维数组。</p>
<h4 id="js二维数组的初始化和声明"><a href="#js二维数组的初始化和声明" class="headerlink" title="js二维数组的初始化和声明"></a>js二维数组的初始化和声明</h4><p>1.<br><img src="http://onh2yw93k.bkt.clouddn.com/%E6%95%B0%E7%BB%841.png" alt=""><br>这是直接定义和初始化，适用于直接赋值，弹窗结果为<code>2</code>。<br>2.<br><img src="http://onh2yw93k.bkt.clouddn.com/%E6%95%B0%E7%BB%842.png" alt=""><br>这种是动态创建并初始化。<br>3.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var arr = new array(new array(1,2),new array(&quot;4&quot;,&quot;6&quot;));</div></pre></td></tr></table></figure>
<p>或者：<br><img src="http://onh2yw93k.bkt.clouddn.com/%E6%95%B03.png" alt=""><br>这是一种动态传入值到数组的方法总结 如下图：<br><img src="http://onh2yw93k.bkt.clouddn.com/%E6%95%B0%E7%BB%843.png" alt=""></p>
<h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><p>在使用markdown编辑完文章后，用 <code>hexo g</code>命令更新博客内容出现下列错误，无法进行 <code>hexo g</code> 如图<br><img src="http://onh2yw93k.bkt.clouddn.com/%E9%94%99%E8%AF%AF.png" alt=""></p>
<h5 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a><em>解决方法</em>：</h5><p>了解到是<code>markdowan</code>语法有问题，出现蓝色高亮就语法冲突，因为使用“[]”,“()”等特殊字符。<br>在更改之前可以先尝试使用<code>hexo clean</code> 命令，然后再<code>hexo g</code> 试试，如果还不能再通过更改文章中的特殊字符实现。可参考这个链接处理<a href="https://link.zhihu.com/?target=http%3A//blog.csdn.net/chwshuang/article/details/52350559" target="_blank" rel="external">Hexo在Github中搭建博客系统(6)异常处理 - 大大的微笑的专栏 - 博客频道 - CSDN.NET</a>。</p>
]]></content>
      
        <categories>
            
            <category> 记录 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> js </tag>
            
            <tag> 二维数组 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[canvas效果及响应式布局加深理解]]></title>
      <url>https:noodle-xia.github.io/2017/04/20/canvas%E6%95%88%E6%9E%9C%E5%8F%8A%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/</url>
      <content type="html"><![CDATA[<p><img src="http://onh2yw93k.bkt.clouddn.com/cloud.gif" alt=""><br>——温故而知新<br><a id="more"></a></p>
<h5 id="温故"><a href="#温故" class="headerlink" title="温故"></a>温故</h5><p><code>&lt;canvas&gt;&lt;/canvas&gt;</code>标签像所有的dom对象一样它有自己本身的属性、方法和事件，其中就有绘图的方法，js能够调用它来进行绘图。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var context =canvas.getContext(&quot;2d&quot;);</div></pre></td></tr></table></figure></p>
<p>代码中<code>context</code>是一个封装了很多绘图功能的对象，2d则是提供2d动画效果，同样使用<code>webgl</code>可以实现<code>3d</code>效果。<br>canvas元素绘制图像的时候常用两种基本方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">context.fill()//填充</div><div class="line">context.stroke()//绘制边框</div></pre></td></tr></table></figure></p>
<p>颜色的应用使用十六进制颜色值<code>#fff</code>等，也可直接使用颜色名称，还有<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rgb(1-255,1-255,1-255)</div><div class="line">rgba(1-255,1-255,1-255,0.1-0.9 //透明度)</div></pre></td></tr></table></figure></p>
<p>在我设置移动端导航页面应用到。</p>
<h6 id="使用-HTML5-Canvas标签-画一个简单的时钟"><a href="#使用-HTML5-Canvas标签-画一个简单的时钟" class="headerlink" title="使用 HTML5 Canvas标签 画一个简单的时钟"></a>使用 HTML5 Canvas标签 画一个简单的时钟</h6><p>几个月之前开始学习时，学着画一个简单的时钟来练手，利用<code>canvas</code>使用<code>JavaScript</code>在网页上绘制图像，先构造一个画布，画布是一个矩形区域，可以控制其每一像素。代码和<code>demo</code>上传在前端小屋的笔记，可进行效果预览 <a href="http://www.qdfuns.com/notes/42658/81fd0ba1c33652b5ecaa45faa21570de.html" target="_blank" rel="external">使用 HTML5 Canvas标签 画一个简单的时钟</a></p>
<h6 id="Canvas为网页添加动态背景"><a href="#Canvas为网页添加动态背景" class="headerlink" title="Canvas为网页添加动态背景"></a>Canvas为网页添加动态背景</h6><p>我的移动端主页参考：</p>
<h5 id="知新"><a href="#知新" class="headerlink" title="知新"></a>知新</h5>]]></content>
      
        <categories>
            
            <category> 响应式 </category>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> canvas </tag>
            
            <tag> demo </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[个人建站学习]]></title>
      <url>https:noodle-xia.github.io/2017/04/15/%E4%B8%AA%E4%BA%BA%E5%BB%BA%E7%AB%99%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p><img src="http://onh2yw93k.bkt.clouddn.com/make.jpg" alt=""><br>总结整理自己过去一段时间所做的东西——用于记录、备忘和学习，也是个人建站历程，学习及注意到的一些东西。<br><a id="more"></a></p>
<h3 id="开头"><a href="#开头" class="headerlink" title="开头"></a>开头</h3><p>  之前因为搭建了个人博客，便接着进一步学习，开始申请域名，搭建自己的服务器。使用的是腾讯云一元云主机+域名，每天有200个名额，中午12点抢购，一般都能选到。</p>
<h6 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h6><p><img src="http://onh2yw93k.bkt.clouddn.com/yunpeizhi.png" alt=""><br>系统选用的是<code>linux CentOS 7.2 64位</code>。</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>在搭建自己服务器方面也着实折腾了好长时间，购买自己云主机之后试着搭建和配置Linux系统的挂载、分区和创建文件系统，参考腾讯云论坛 <a href="https://www.qcloud.com/document/product/362/6735" target="_blank" rel="external">Linux系统分区、格式化、挂载及创建文件系统</a>。<br>我使用的linux控制面板是<code>wdcp</code>。</p>
<ul>
<li><code>wdcp</code>是一套通过WEB控制和管理服务器的Linux服务器管理系统以及虚拟主机管理系统,旨在易于使用Linux系统做为我们的网站服务器系统,以及平时对Linux服务器的常用管理操作,均可在wdCP的后台里操作完成.</li>
<li>使用<code>wdcp</code>,通过WEB方式就可以轻松创建网站,开站点,发布网站,创建FTP,创建mysql数据库等.</li>
<li>使用<code>wdcp</code>,通过WEB方式,就可以管理服务器上的站点,站点文件,站点配置等等.</li>
</ul>
<p>安装过程稍微有点繁琐，主要是等待时间有点久，也基本上参考腾讯云论坛发布的一些教程视频 <a href="http://bbs.qcloud.com/thread-25587-1-1.html" target="_blank" rel="external">Linux基础教程 wdcp篇</a>，上边实现的挂载分区也可参考这里面的视频，介绍的相对详细。</p>
<h6 id="接下来是上传文件到Linux云服务器"><a href="#接下来是上传文件到Linux云服务器" class="headerlink" title="接下来是上传文件到Linux云服务器"></a>接下来是上传文件到Linux云服务器</h6><p>下载并安装软件<code>XfTP5</code>（百度搜索下载即可）实现本地文件的上传，把自己的主页和项目放到云服务器中，同时下载<code>Xshell</code>远程登录自己的云服务器（云主机）。在<code>Xshell</code>打开新建传输协议便会启动<code>XfTP5</code>，即可进行传输。如<img src="http://onh2yw93k.bkt.clouddn.com/xshell.gif" alt=""></p>
<h6 id="然后遇到的问题是修改默认主页"><a href="#然后遇到的问题是修改默认主页" class="headerlink" title="然后遇到的问题是修改默认主页"></a>然后遇到的问题是修改默认主页</h6><p>做网站的可能都会发现，有的网站做出来之后，会默认带上后缀<code>index.html</code>。这样一来，网址看起来就不是那么美观，而且不利于以后的seo优化。（解决是将index.html删除（如果没有出现这种情况，就不用管））。<br>还有云服务器下的web项目一般默认先调用<code>index.php</code>、然后是<code>index.html</code>等index文件。想要先调用自己的<code>index.html</code>文件的话，我的做法是把<code>index.php</code>删掉就好了。。</p>
<h5 id="个人主页（noodle-xia的小屋）"><a href="#个人主页（noodle-xia的小屋）" class="headerlink" title="个人主页（noodle-xia的小屋）"></a>个人主页（noodle-xia的小屋）</h5><h6 id="移动端与pc端采用不同页面"><a href="#移动端与pc端采用不同页面" class="headerlink" title="移动端与pc端采用不同页面"></a>移动端与pc端采用不同页面</h6><p>因为PC端主页若是在移动端加载需耗费不少流量（加载动画效果及音乐时），对于流量党体验很不好，并且之前我所参考的这个主页模板并没有做响应式布局这部分，考虑这一点便做了移动端的主页进行跳转。如何跳转? 只需要在要跳转的页面head标签里加上下面这句代码就可以了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;script src=&quot;http://siteapp.baidu.com/static/webappservice/uaredirect.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">    uaredirect(&quot;http://www.nooxia.cn/me.html&quot;);   //&quot;手机版页面网址&quot;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p>或者是通过判断浏览器User-Agent为客户端发送不同的页面，实际上和以上方式差不多吧，都是用js方式实现重定向。</p>
<h6 id="移动端主页"><a href="#移动端主页" class="headerlink" title="移动端主页"></a>移动端主页</h6><p><img src="http://onh2yw93k.bkt.clouddn.com/mobile1.jpg" alt=""> </p>
<h6 id="并添加-vue音乐播放器页面"><a href="#并添加-vue音乐播放器页面" class="headerlink" title="并添加 vue音乐播放器页面"></a>并添加 vue音乐播放器页面</h6><p><img src="http://onh2yw93k.bkt.clouddn.com/mobile3.jpg" alt="添加 vue音乐播放器页面"></p>
<h6 id="pc端个人主页"><a href="#pc端个人主页" class="headerlink" title="pc端个人主页"></a>pc端个人主页</h6><p><img src="http://onh2yw93k.bkt.clouddn.com/pcpage.png" alt=""></p>
<ul>
<li>唯一链接 <a href="http://www.nooxia.cn/" target="_blank" rel="external">http://www.nooxia.cn/</a><h5 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h5>也就是自己之前一段时间的总结，只为记录，只是泛泛提到自己认为几个建站的几个小问题，并不全面，相关方面的论坛博客数不胜数，以后需要学习提高的还有很多。另外对于自己的个人主页还有很多需要改进的地方，追求简单化的设计，追求答案，并相信过程。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 个人网站 </category>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> demo </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 建站 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vue-cli多页面脚手架]]></title>
      <url>https:noodle-xia.github.io/2017/03/20/My-New-Post/</url>
      <content type="html"><![CDATA[<p> 学习使用vue-cli多页面脚手架<br><a id="more"></a></p>
<h2 id="关于vue-cli"><a href="#关于vue-cli" class="headerlink" title="关于vue-cli"></a>关于vue-cli</h2><p><code>Vue-cli</code>是vue官方提供的一个命令行工具（vue-cli），可用于快速搭建大型单页应用。（之前体验学习<code>vue.js</code>一段时间，慢慢开始接触使用vue-cli多页面脚手架）。帮助你快速开始一个vue项目，其实其本质就是给你一套文件结构，包含基础的依赖库，你只需要<code>npm install</code>一下就可以安装。让你不需要为编译或其他琐碎的事情而浪费时间，这并不会限制到你的发挥。（看到有人好像是这么解释的，很赞同这个答案）</p>
<h2 id="学习vue之旅"><a href="#学习vue之旅" class="headerlink" title="学习vue之旅"></a>学习vue之旅</h2><p>相关学习博客链接:<a href="https://segmentfault.com/a/1190000007124470" target="_blank" rel="external">Vue2.0新手完全填坑攻略—从环境搭建到发布</a> </p>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># install dependencies</div><div class="line">npm install</div><div class="line"></div><div class="line"># serve with hot reload at localhost:8080/module/index.html</div><div class="line">npm run dev   //运行</div><div class="line"></div><div class="line"># build for production with minification</div><div class="line">npm run build   //打包</div></pre></td></tr></table></figure>
<p>输入完命令<code>npm run dev</code>会自动启动浏览器，自动启动浏览器就会看到vue图标的界面了 如</p>
<p><img src="http://onh2yw93k.bkt.clouddn.com/005.png" alt=""></p>
<p><code>npm run build</code>是项目打包命令，运行这个命令后会生成可以进行上线的打包文件，这时候打开根目录（dist）下的index.html就可以直接看到你的项目效果了。<br>在使用 <code>atom</code> 编辑时进一步认识atom编辑器与<code>subline</code>的区别，另外在打开<code>IDE</code>这一项时，使用atom打开项目需要安装 Vue 语法高亮的插件，使项目代码可读性更好。添加插件方法：<br>在atom编辑页面选项栏中点击<code>Packages</code>，选择<code>Settings View</code>——&gt; <code>Install Packages/Themes</code>,然后搜索需要添加的插件，如图：<br><img src="http://onh2yw93k.bkt.clouddn.com/006.png" alt=""></p>
<h3 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h3><p>哈哈 之前看博客教程里提到有需要填的坑，自己没在意，直接看下面的了，现在果然跳进去了，当自己试着打包别人做好的项目时，出现<code>cannot find module &#39;clean-webpack-plugin&#39;</code>里面确实提醒了少哪个插件下哪个。。哈哈<br>慢慢来。。加油！</p>
<ul>
<li><strong>下一步</strong><br>通过学习vue-cli多页面脚手架和别人的demo 尝试搭建自己的多页面个人主页</li>
</ul>
]]></content>
      
        <categories>
            
            <category> code </category>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> vue </tag>
            
            <tag> 前端框架 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vue学习体验（2）-笔记]]></title>
      <url>https:noodle-xia.github.io/2017/03/13/vue%E5%AD%A6%E4%B9%A0%E4%BD%93%E9%AA%8C%EF%BC%882%EF%BC%89-%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>之前练习了一些从模型数据到视图的单向绑定，这次运用 v-model指令实现视图到模型的一个传递，依然结合jQuery的一些实现方法进行比较，加深自己的理解。<br><a id="more"></a><br><strong>代码部分：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;title&gt;02&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;div id=&quot;app&quot;&gt;</div><div class="line">    &lt;input type=&quot;text&quot; v-model=&quot;msg&quot;&gt; &lt;!--显示input输入的内容--&gt;</div><div class="line">    &lt;h1&gt;&#123;&#123;msg&#125;&#125;&lt;/h1&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;!--&lt;script type=&quot;text/javascript&quot; &gt;  --&gt;</div><div class="line">&lt;!--//用jqury实现要达到的需求--&gt;</div><div class="line">&lt;!--//$(&apos;input&apos;).on(&apos;keydown&apos;,function (e) &#123;   --&gt;</div><div class="line">    &lt;!--//在jQuery中获取input元素--&gt;</div><div class="line">    &lt;!--//其他获取方式  1、this 2、e.target    --&gt;</div><div class="line">&lt;!--//    console.log(e.target)--&gt;</div><div class="line">    &lt;!--//获取Input的值 var val=e.target.value   --&gt;</div><div class="line">&lt;!--//    var val =$(this).val();  --&gt;</div><div class="line">&lt;!--// 或者   $(&apos;h1&apos;&apos;).html(val)   --&gt;</div><div class="line">&lt;!--&#125;)--&gt;</div><div class="line">&lt;script src=&quot;vue.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">var app=new Vue(&#123;</div><div class="line">   el:&apos;#app&apos;,</div><div class="line">   data:&#123;</div><div class="line">       msg:&apos;0922&apos;</div><div class="line">   &#125;</div><div class="line">&#125;)</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<p><strong>理解及总结：</strong><br>  开始练习了一些是模型数据通过vue的data属性实现数据到vue的一个绑定，此时数据更新会被vue监听渲染给视图，现在运用的<code>v-model</code>指令则是实现了视图到vue实例化对象的一个数据传递，假若视图更新，vue就会捕捉到，就会传递给模型数据。<br>（<code>v-model</code>的属性值是一个js作用域，也就是一个js环境，在其中添加属性值就是添加Vue实例化对象的变量。有点绕口。。。。哈哈哈）</p>
]]></content>
      
        <categories>
            
            <category> code </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vue </tag>
            
            <tag> 前端框架 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vue初体验]]></title>
      <url>https:noodle-xia.github.io/2017/03/09/vue%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      <content type="html"><![CDATA[<p>简单的学习了一点Vue（mvvm模型），通过与原生js和jQuery写法相比较体验Vue的方便，条理清晰，不会使项目显得杂乱。实现数据到视图的双向绑定。<br><a id="more"></a><br>  代码部分：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">    &lt;html lang=&quot;en&quot;&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">        &lt;title&gt;01&lt;/title&gt;</div><div class="line">        &lt;script src=&quot;jquery-3.1.1.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">        &lt;script src=&quot;vue.js&quot;&gt;&lt;/script&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">    &lt;div id=&quot;a&quot;&gt;&#123;&#123;msg&#125;&#125;&lt;/div&gt;</div><div class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">        var data =&#123;</div><div class="line">            msg:&quot;你绝望了么？？&quot;</div><div class="line">        &#125;</div><div class="line">        data.msg=&quot;致胜一击 只要心够决！！&quot;</div><div class="line">    //    data.msg=&quot;致胜一击 只要心够决！！&quot;</div><div class="line">    //    document.getElementById(&quot;a&quot;).innerHTML=data.msg;</div><div class="line">        //原生js写法。。</div><div class="line">    //    document.getElementById(&quot;a&quot;).innerHTML=data.msg;</div><div class="line">    //    $(&quot;#a&quot;).html(data.msg).html(data.msg)</div><div class="line">        //jQury写法。。</div><div class="line">        //创建vue实例化对象，（vm对象——绑定视图和数据..）</div><div class="line">    new Vue(&#123;</div><div class="line">       //绑定视图</div><div class="line">      el:&quot;#a&quot;,</div><div class="line">       //绑定数据</div><div class="line">       data:data,</div><div class="line">   &#125;)</div><div class="line">        data.msg=&quot;致胜一击 只要心够决！！&quot;</div><div class="line">    &lt;/script&gt;</div><div class="line">    &lt;/body&gt;</div><div class="line">    &lt;/html&gt;</div><div class="line">---</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> code </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vue </tag>
            
            <tag> 前端框架 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo+github搭建个人博客]]></title>
      <url>https:noodle-xia.github.io/2017/03/06/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p>个人博客更新日志&amp;也是使用hexo+github搭建个人博客遇到的一些问题及看法，同时在主题中添加了一些新东西。<br><a id="more"></a></p>
<h3 id="开头"><a href="#开头" class="headerlink" title="开头"></a>开头</h3><p>因为追求新鲜开始自己尝试了七八个主题，开始使用的是相对简洁 <a href="https://github.com/wuchong/jacman" target="_blank" rel="external">Jacman</a>,另外两个是<code>Yilia</code> <a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">点击链接</a> 、 <code>yumemor</code> <a href="https://github.com/yumemor" target="_blank" rel="external">点击链接</a> ， 个人比较喜欢yumemor。我目前正在用的<a href="http://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">yilia</a>，并添加了一些小插件。如果你崇尚简洁直观的话，推荐使用<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">next</a>或者是<a href="https://github.com/xiangming/landscape-plus" target="_blank" rel="external">landscape-plus</a>，使用的用户还有在github上star的都比较多。<br>我开始搭建博客很顺利，也是在选用主题是花费了不少功夫，起初按照<a href="https://github.com/wuchong/jacman" target="_blank" rel="external">Jacman</a> 这一主题一步步更新内容，修改样式，在主题<code>themes</code>文件中修改字体、文字及section的颜色、banner图片、微博秀等等。<br>怎么搭建网上有很多教程，我不再累赘介绍，大多是在 <code>cmd</code> 命令行（或者 <code>git shell</code> 命令下完成）。以下是我认为需要注意的一些问题，也是我遇到的好多坑，还有自己修改的一些东西。</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文:"></a>正文:</h3><h5 id="更新主题命令及上传部署到github"><a href="#更新主题命令及上传部署到github" class="headerlink" title="更新主题命令及上传部署到github"></a>更新主题命令及上传部署到github</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd themes/yilia</div><div class="line">git pull origin master</div></pre></td></tr></table></figure>
<p>在更改博客<code>themes</code>文件下的东西之后执行的命令，是主题的源文件更新，不是我们博客的更新。而<code>hexo g</code> 是更新博客命令。<br><code>hexo new &quot;文件名&quot;</code> 是新建文件名<br>  <code>hexo deploy</code>（或<code>hexo d</code>）上传部署到github 。<br>搭建完成之后，这几个命令也是我经常使用的， 学习使用了很长时间git应用，有时间总结一下经常用的的git命令，以便使用。。。。</p>
<h6 id="遇到的问题："><a href="#遇到的问题：" class="headerlink" title="遇到的问题："></a>遇到的问题：</h6><p>用<code>git shell</code> 命令<code>hexo d</code>）上传到github出错，总是出现需要输入用户名和密码。</p>
<h6 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h6><p>在你博客根目录下的<code>_config.yml</code>中<code>repository:</code>修改为<code>git@github.com</code>形式 如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: git@github.com:noodle-xia/blog</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>在<code>branch:</code>中如果博客地址是<code>yourname.github.io</code>，分支名就是<code>master</code>使用另建的<code>Repositorie</code>就使用<code>gh-pages</code>。</p>
<h5 id="博客中插入图片和音乐"><a href="#博客中插入图片和音乐" class="headerlink" title="博客中插入图片和音乐"></a>博客中插入图片和音乐</h5><p>（1）、放在<a href="https://portal.qiniu.com/signup/choice?code=3lglas6pgi2qa" target="_blank" rel="external">七牛</a>上，需要先注册，上传图片生成链接，直接在文章中使用链接即可。（推荐使用这种，还拥有10G的免费存储图片资源。）<br>（2）、放在本地文件<br>首先在<code>yourname.github.io</code>目录下确认 <code>_config.yml</code> 中有<code>post_asset_folder:true</code> 。<br>在博客根目录下执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</div></pre></td></tr></table></figure></p>
<p>然后再使用<code>hexo new &#39;new&#39;</code>创建新博客的时候，会在<code>source/_posts</code>里面创建<code>.md</code>文件的同时生成一个相同的名字的文件夹。把该文章中需要使用的图片放在该文件夹下即可。在博客中使用的时候用以下方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">![图片描述](/文件夹名/你的图片名字.JPG)</div><div class="line">例如：</div><div class="line">![ ] (img/author.jpg)</div></pre></td></tr></table></figure></p>
<p>（3）、插入音乐<br>可以使用网易云音乐，搜索你想要的歌曲，点击歌曲名字进入播放器页面，点击生成外链播放器；复制代码，直接粘贴到博文中即可，这样会显示一个网易的播放器。<br>（4）、引入左边栏的音乐播放器<br>我使用的是一款绚丽彩虹的音乐播放器插件——&gt;<a href="http://www.badapple.top/" target="_blank" rel="external">绚丽彩虹播放器</a>里面有相关使用教程。复制代码块添加到<code>themes\yilia\layout\_partial\left-col.ejs</code>文件最下面即可。效果来源于<a href="https://zhouwhao.github.io/" target="_blank" rel="external">demo</a>。</p>
<h5 id="引入天气"><a href="#引入天气" class="headerlink" title="引入天气"></a>引入天气</h5><p>同样将以下代码块加入<code>themes\yilia\layout\_partial\left-col.ejs</code>的第一个div中即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;!--天气开始--&gt;</div><div class="line">&lt;div id=&quot;tp-weather-widget&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;script&gt;(function(T,h,i,n,k,P,a,g,e)&#123;g=function()&#123;P=h.createElement(i);a=h.getElementsByTagName(i)[0];P.src=k;P.charset=&quot;utf-8&quot;;P.async=1;a.parentNode.insertBefore(P,a)&#125;;T[&quot;ThinkPageWeatherWidgetObject&quot;]=n;T[n]||(T[n]=function()&#123;(T[n].q=T[n].q||[]).push(arguments)&#125;);T[n].l=+new Date();if(T.attachEvent)&#123;T.attachEvent(&quot;onload&quot;,g)&#125;else&#123;T.addEventListener(&quot;load&quot;,g,false)&#125;&#125;(window,document,&quot;script&quot;,&quot;tpwidget&quot;,&quot;//widget.thinkpage.cn/widget/chameleon.js&quot;))&lt;/script&gt;</div><div class="line">&lt;script&gt;tpwidget(&quot;init&quot;, &#123;</div><div class="line">    &quot;flavor&quot;: &quot;slim&quot;,</div><div class="line">    &quot;location&quot;: &quot;WM6N2PM3WY2K&quot;,</div><div class="line">    &quot;geolocation&quot;: &quot;enabled&quot;,</div><div class="line">    &quot;language&quot;: &quot;zh-chs&quot;,</div><div class="line">    &quot;unit&quot;: &quot;c&quot;,</div><div class="line">    &quot;theme&quot;: &quot;chameleon&quot;,</div><div class="line">    &quot;container&quot;: &quot;tp-weather-widget&quot;,</div><div class="line">    &quot;bubble&quot;: &quot;enabled&quot;,</div><div class="line">    &quot;alarmType&quot;: &quot;badge&quot;,</div><div class="line">    &quot;color&quot;: &quot;#FFFFFF&quot;,</div><div class="line">    &quot;uid&quot;: &quot;U88B4B2797&quot;,</div><div class="line">    &quot;hash&quot;: &quot;c9d7cb43b80ffece52c9a1ebbfbca65f&quot;</div><div class="line">&#125;);</div><div class="line">tpwidget(&quot;show&quot;);&lt;/script&gt;</div><div class="line">&lt;!--天气结束--&gt;</div></pre></td></tr></table></figure></p>
<p>效果如图：<br><img src="http://onh2yw93k.bkt.clouddn.com/tianqi.png" alt=""></p>
<h5 id="添加博客访问量"><a href="#添加博客访问量" class="headerlink" title="添加博客访问量"></a>添加博客访问量</h5><p>在<code>themes\yilia\layout\_partial\after_footer.ejs</code>文件中第三个div之后（添加到什么地方好看自己决定）添加如下代码即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;script async src=&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;</div><div class="line">    本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot; style=&quot;color: blue;&quot;&gt;&lt;/span&gt;次</div><div class="line">&lt;/span&gt;</div><div class="line">&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</div><div class="line">  访客数&lt;span id=&quot;busuanzi_value_site_uv&quot; style=&quot;color: blue;&quot;&gt;&lt;/span&gt;人次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure></p>
<p>css样式也可做修改，更多详细细节可以访问 <a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="external">不蒜子 不如</a>。</p>
<h5 id="Markdown文档编辑器"><a href="#Markdown文档编辑器" class="headerlink" title="Markdown文档编辑器"></a>Markdown文档编辑器</h5><p>在这里推荐两款<code>markdown</code>文档的编辑软件，一种是在本地的编辑器<a href="http://www.softpedia.com/get/Office-tools/Other-Office-Tools/Haroopad.shtml" target="_blank" rel="external">Haroopad</a>，非常小众，左边编辑，右边实时预览效果，很轻便。（目前我使用的就是这种，之前打开编辑<code>.md</code>类的文件使用的是<code>Editplus</code>但很不方便，使用专门的<code>markdown</code>编辑器更快速见效）。 另一种是在线的编辑器<a href="http://md.birdteam.net/" target="_blank" rel="external">MaHua</a>，打开链接可以在线编辑。</p>
<h6 id="打赏页面"><a href="#打赏页面" class="headerlink" title="打赏页面"></a>打赏页面</h6><p>修改为不显示，常来看看就好，哈哈哈哈哈。。</p>
<h3 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h3><p>也可自己构建一个博客主题，分享然后再github上建一个仓库，别人再<code>git clone</code> 下来使用你的主题。经常不知道如何写文章，因为害怕写开头。。哈哈哈。。搭建博客，也是为了总结学过的知识，一方面可以提供交流，也因为总会忘，顺便巩固看过的东西，管理仓库，梳理技术。<br>最后，遇到其他问题，欢迎提问交流~</p>
]]></content>
      
        <categories>
            
            <category> 感想 </category>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>

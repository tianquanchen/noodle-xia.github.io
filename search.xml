<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[vue-cli多页面脚手架]]></title>
      <url>https:noodle-xia.github.io/blog/blog/2017/03/20/My-New-Post/</url>
      <content type="html"><![CDATA[<p> 学习使用vue-cli多页面脚手架<br><a id="more"></a></p>
<h2 id="关于vue-cli"><a href="#关于vue-cli" class="headerlink" title="关于vue-cli"></a>关于vue-cli</h2><p><code>Vue-cli</code>是vue官方提供的一个命令行工具（vue-cli），可用于快速搭建大型单页应用。（之前体验学习<code>vue.js</code>一段时间，慢慢开始接触使用vue-cli多页面脚手架）。帮助你快速开始一个vue项目，其实其本质就是给你一套文件结构，包含基础的依赖库，你只需要<code>npm install</code>一下就可以安装。让你不需要为编译或其他琐碎的事情而浪费时间，这并不会限制到你的发挥。（看到有人好像是这么解释的，很赞同这个答案）</p>
<h2 id="学习vue之旅"><a href="#学习vue之旅" class="headerlink" title="学习vue之旅"></a>学习vue之旅</h2><p>相关学习博客链接:<a href="https://segmentfault.com/a/1190000007124470" target="_blank" rel="external">Vue2.0新手完全填坑攻略—从环境搭建到发布</a> </p>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># install dependencies</div><div class="line">npm install</div><div class="line"></div><div class="line"># serve with hot reload at localhost:8080/module/index.html</div><div class="line">npm run dev   //运行</div><div class="line"></div><div class="line"># build for production with minification</div><div class="line">npm run build   //打包</div></pre></td></tr></table></figure>
<p>输入完命令<code>npm run dev</code>会自动启动浏览器，自动启动浏览器就会看到vue图标的界面了 如</p>
<p><img src="http://onh2yw93k.bkt.clouddn.com/005.png" alt=""></p>
<p><code>npm run build</code>是项目打包命令，运行这个命令后会生成可以进行上线的打包文件，这时候打开根目录（dist）下的index.html就可以直接看到你的项目效果了。<br>在使用 <code>atom</code> 编辑时进一步认识atom编辑器与<code>subline</code>的区别，另外在打开<code>IDE</code>这一项时，使用atom打开项目需要安装 Vue 语法高亮的插件，使项目代码可读性更好。添加插件方法：<br>在atom编辑页面选项栏中点击<code>Packages</code>，选择<code>Settings View</code>——&gt; <code>Install Packages/Themes</code>,然后搜索需要添加的插件，如图：<br><img src="http://onh2yw93k.bkt.clouddn.com/006.png" alt=""></p>
<h3 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h3><p>哈哈 之前看博客教程里提到有需要填的坑，自己没在意，直接看下面的了，现在果然跳进去了，当自己试着打包别人做好的项目时，出现<code>cannot find module &#39;clean-webpack-plugin&#39;</code>里面确实提醒了少哪个插件下哪个。。哈哈<br>慢慢来。。加油！</p>
<ul>
<li><strong>下一步</strong><br>通过学习vue-cli多页面脚手架和别人的demo 尝试搭建自己的多页面个人主页</li>
</ul>
]]></content>
      
        <categories>
            
            <category> code </category>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 前端框架 </tag>
            
            <tag> vue </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vue学习体验（2）-笔记]]></title>
      <url>https:noodle-xia.github.io/blog/blog/2017/03/13/vue%E5%AD%A6%E4%B9%A0%E4%BD%93%E9%AA%8C%EF%BC%882%EF%BC%89-%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>之前练习了一些从模型数据到视图的单向绑定，这次运用 v-model指令实现视图到模型的一个传递，依然结合jQuery的一些实现方法进行比较，加深自己的理解。<br><a id="more"></a><br><strong>代码部分：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;title&gt;02&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;div id=&quot;app&quot;&gt;</div><div class="line">    &lt;input type=&quot;text&quot; v-model=&quot;msg&quot;&gt; &lt;!--显示input输入的内容--&gt;</div><div class="line">    &lt;h1&gt;&#123;&#123;msg&#125;&#125;&lt;/h1&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;!--&lt;script type=&quot;text/javascript&quot; &gt;  --&gt;</div><div class="line">&lt;!--//用jqury实现要达到的需求--&gt;</div><div class="line">&lt;!--//$(&apos;input&apos;).on(&apos;keydown&apos;,function (e) &#123;   --&gt;</div><div class="line">    &lt;!--//在jQuery中获取input元素--&gt;</div><div class="line">    &lt;!--//其他获取方式  1、this 2、e.target    --&gt;</div><div class="line">&lt;!--//    console.log(e.target)--&gt;</div><div class="line">    &lt;!--//获取Input的值 var val=e.target.value   --&gt;</div><div class="line">&lt;!--//    var val =$(this).val();  --&gt;</div><div class="line">&lt;!--// 或者   $(&apos;h1&apos;&apos;).html(val)   --&gt;</div><div class="line">&lt;!--&#125;)--&gt;</div><div class="line">&lt;script src=&quot;vue.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">var app=new Vue(&#123;</div><div class="line">   el:&apos;#app&apos;,</div><div class="line">   data:&#123;</div><div class="line">       msg:&apos;0922&apos;</div><div class="line">   &#125;</div><div class="line">&#125;)</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<p><strong>理解及总结：</strong><br>  开始练习了一些是模型数据通过vue的data属性实现数据到vue的一个绑定，此时数据更新会被vue监听渲染给视图，现在运用的<code>v-model</code>指令则是实现了视图到vue实例化对象的一个数据传递，假若视图更新，vue就会捕捉到，就会传递给模型数据。<br>（<code>v-model</code>的属性值是一个js作用域，也就是一个js环境，在其中添加属性值就是添加Vue实例化对象的变量。有点绕口。。。。哈哈哈）</p>
]]></content>
      
        <categories>
            
            <category> code </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 前端框架 </tag>
            
            <tag> vue </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vue初体验]]></title>
      <url>https:noodle-xia.github.io/blog/blog/2017/03/09/vue%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      <content type="html"><![CDATA[<p>简单的学习了一点Vue（mvvm模型），通过与原生js和jQuery写法相比较体验Vue的方便，条理清晰，不会使项目显得杂乱。实现数据到视图的双向绑定。<br><a id="more"></a><br>  代码部分：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">    &lt;html lang=&quot;en&quot;&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">        &lt;title&gt;01&lt;/title&gt;</div><div class="line">        &lt;script src=&quot;jquery-3.1.1.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">        &lt;script src=&quot;vue.js&quot;&gt;&lt;/script&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">    &lt;div id=&quot;a&quot;&gt;&#123;&#123;msg&#125;&#125;&lt;/div&gt;</div><div class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">        var data =&#123;</div><div class="line">            msg:&quot;你绝望了么？？&quot;</div><div class="line">        &#125;</div><div class="line">        data.msg=&quot;致胜一击 只要心够决！！&quot;</div><div class="line">    //    data.msg=&quot;致胜一击 只要心够决！！&quot;</div><div class="line">    //    document.getElementById(&quot;a&quot;).innerHTML=data.msg;</div><div class="line">        //原生js写法。。</div><div class="line">    //    document.getElementById(&quot;a&quot;).innerHTML=data.msg;</div><div class="line">    //    $(&quot;#a&quot;).html(data.msg).html(data.msg)</div><div class="line">        //jQury写法。。</div><div class="line">        //创建vue实例化对象，（vm对象——绑定视图和数据..）</div><div class="line">    new Vue(&#123;</div><div class="line">       //绑定视图</div><div class="line">      el:&quot;#a&quot;,</div><div class="line">       //绑定数据</div><div class="line">       data:data,</div><div class="line">   &#125;)</div><div class="line">        data.msg=&quot;致胜一击 只要心够决！！&quot;</div><div class="line">    &lt;/script&gt;</div><div class="line">    &lt;/body&gt;</div><div class="line">    &lt;/html&gt;</div><div class="line">---</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> code </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 前端框架 </tag>
            
            <tag> vue </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo+github搭建个人博客]]></title>
      <url>https:noodle-xia.github.io/blog/blog/2017/03/06/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p>个人博客更新日志&amp;也是使用hexo+github搭建个人博客遇到的一些问题及看法，同时在主题中添加了一些新东西。<br><a id="more"></a></p>
<h3 id="开头"><a href="#开头" class="headerlink" title="开头"></a>开头</h3><p>因为追求新鲜开始自己尝试了七八个主题，开始使用的是相对简洁 <a href="https://github.com/wuchong/jacman" target="_blank" rel="external">Jacman</a>,另外两个是<code>Yilia</code> <a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">点击链接</a> 、 <code>yumemor</code> <a href="https://github.com/yumemor" target="_blank" rel="external">点击链接</a> ， 个人比较喜欢yumemor。我目前正在用的<a href="http://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">yilia</a>，并添加了一些小插件。如果你崇尚简洁直观的话，推荐你使用<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">next</a>或者是<a href="https://github.com/xiangming/landscape-plus" target="_blank" rel="external">landscape-plus</a>，使用的用户还有在github上star的都比较多。<br>我开始搭建博客很顺利，也是在选用主题是花费了不少功夫，起初按照<a href="https://github.com/wuchong/jacman" target="_blank" rel="external">Jacman</a> 这一主题一步步更新内容，修改样式，在主题<code>themes</code>文件中修改字体、文字及section的颜色、banner图片、微博秀等等。<br>怎么搭建网上有很多教程，我不再累赘介绍，大多是在 <code>cmd</code> 命令行（或者 <code>git shell</code> 命令下完成）。以下是我认为需要注意的一些问题，也是我遇到的好多坑，还有自己修改的一些东西。</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文:"></a>正文:</h3><h5 id="更新主题命令及上传部署到github"><a href="#更新主题命令及上传部署到github" class="headerlink" title="更新主题命令及上传部署到github"></a>更新主题命令及上传部署到github</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd themes/yilia</div><div class="line">git pull origin master</div></pre></td></tr></table></figure>
<p>在更改博客<code>themes</code>文件下的东西之后执行的命令，是主题的源文件更新，不是我们博客的更新。而<code>hexo g</code> 是更新博客命令。<br><code>hexo new &quot;文件名&quot;</code> 是新建文件名<br>  <code>hexo deploy</code>（或<code>hexo d</code>）上传部署到github 。<br>搭建完成之后，这几个命令也是我经常使用的， 学习使用了很长时间git应用，有时间总结一下经常用的的git命令，以便使用。。。。</p>
<h6 id="遇到的问题："><a href="#遇到的问题：" class="headerlink" title="遇到的问题："></a>遇到的问题：</h6><p>用<code>git shell</code> 命令<code>hexo d</code>）上传到github出错，总是出现需要输入用户名和密码。</p>
<h6 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h6><p>在你博客根目录下的<code>_config.yml</code>中<code>repository:</code>修改为<code>git@github.com</code>形式 如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: git@github.com:noodle-xia/blog</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>在<code>branch:</code>中如果博客地址是<code>yourname.github.io</code>，分支名就是<code>master</code>使用另建的<code>Repositorie</code>就使用<code>gh-pages</code>。</p>
<h5 id="博客中插入图片和音乐"><a href="#博客中插入图片和音乐" class="headerlink" title="博客中插入图片和音乐"></a>博客中插入图片和音乐</h5><p>（1）、放在<a href="https://portal.qiniu.com/signup/choice?code=3lglas6pgi2qa" target="_blank" rel="external">七牛</a>上，需要先注册，上传图片生成链接，直接在文章中使用链接即可。（推荐使用这种，还拥有10G的免费存储图片资源。）<br>（2）、放在本地文件<br>首先在<code>yourname.github.io</code>目录下确认 <code>_config.yml</code> 中有<code>post_asset_folder:true</code> 。<br>在博客根目录下执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</div></pre></td></tr></table></figure></p>
<p>然后再使用 hexo new ‘new’ 创建新博客的时候，会在source/_posts里面创建.md文件的同时生成一个相同的名字的文件夹。把该文章中需要使用的图片放在该文件夹下即可。在博客中使用的时候用以下方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">![图片描述](/文件夹名/你的图片名字.JPG)</div><div class="line">例如：</div><div class="line">![ ] (img/author.jpg)</div></pre></td></tr></table></figure></p>
<p>（3）、插入音乐<br>可以使用网易云音乐，搜索你想要的歌曲，点击歌曲名字进入播放器页面，点击生成外链播放器；复制代码，直接粘贴到博文中即可，这样会显示一个网易的播放器。<br>（4）、引入左边栏的音乐播放器<br>我使用的是一款绚丽彩虹的音乐播放器插件——&gt;<a href="http://www.badapple.top/" target="_blank" rel="external">绚丽彩虹播放器</a>里面有相关使用教程。复制代码块添加到<code>themes\yilia\layout\_partial\left-col.ejs</code>文件最下面即可。效果来源于<a href="https://zhouwhao.github.io/" target="_blank" rel="external">demo</a>。</p>
<h5 id="引入天气"><a href="#引入天气" class="headerlink" title="引入天气"></a>引入天气</h5><p>同样将以下代码块加入<code>themes\yilia\layout\_partial\left-col.ejs</code>的第一个div中即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;!--天气开始--&gt;</div><div class="line">&lt;div id=&quot;tp-weather-widget&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;script&gt;(function(T,h,i,n,k,P,a,g,e)&#123;g=function()&#123;P=h.createElement(i);a=h.getElementsByTagName(i)[0];P.src=k;P.charset=&quot;utf-8&quot;;P.async=1;a.parentNode.insertBefore(P,a)&#125;;T[&quot;ThinkPageWeatherWidgetObject&quot;]=n;T[n]||(T[n]=function()&#123;(T[n].q=T[n].q||[]).push(arguments)&#125;);T[n].l=+new Date();if(T.attachEvent)&#123;T.attachEvent(&quot;onload&quot;,g)&#125;else&#123;T.addEventListener(&quot;load&quot;,g,false)&#125;&#125;(window,document,&quot;script&quot;,&quot;tpwidget&quot;,&quot;//widget.thinkpage.cn/widget/chameleon.js&quot;))&lt;/script&gt;</div><div class="line">&lt;script&gt;tpwidget(&quot;init&quot;, &#123;</div><div class="line">    &quot;flavor&quot;: &quot;slim&quot;,</div><div class="line">    &quot;location&quot;: &quot;WM6N2PM3WY2K&quot;,</div><div class="line">    &quot;geolocation&quot;: &quot;enabled&quot;,</div><div class="line">    &quot;language&quot;: &quot;zh-chs&quot;,</div><div class="line">    &quot;unit&quot;: &quot;c&quot;,</div><div class="line">    &quot;theme&quot;: &quot;chameleon&quot;,</div><div class="line">    &quot;container&quot;: &quot;tp-weather-widget&quot;,</div><div class="line">    &quot;bubble&quot;: &quot;enabled&quot;,</div><div class="line">    &quot;alarmType&quot;: &quot;badge&quot;,</div><div class="line">    &quot;color&quot;: &quot;#FFFFFF&quot;,</div><div class="line">    &quot;uid&quot;: &quot;U88B4B2797&quot;,</div><div class="line">    &quot;hash&quot;: &quot;c9d7cb43b80ffece52c9a1ebbfbca65f&quot;</div><div class="line">&#125;);</div><div class="line">tpwidget(&quot;show&quot;);&lt;/script&gt;</div><div class="line">&lt;!--天气结束--&gt;</div></pre></td></tr></table></figure></p>
<p>效果如图：<br><img src="http://onh2yw93k.bkt.clouddn.com/tianqi.png" alt=""></p>
<h5 id="添加博客访问量"><a href="#添加博客访问量" class="headerlink" title="添加博客访问量"></a>添加博客访问量</h5><p>在<code>themes\yilia\layout\_partial\after_footer.ejs</code>文件中第三个div之后（添加到什么地方好看自己决定）添加如下代码即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;script async src=&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;</div><div class="line">    本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot; style=&quot;color: blue;&quot;&gt;&lt;/span&gt;次</div><div class="line">&lt;/span&gt;</div><div class="line">&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</div><div class="line">  访客数&lt;span id=&quot;busuanzi_value_site_uv&quot; style=&quot;color: blue;&quot;&gt;&lt;/span&gt;人次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure></p>
<p>css样式也可做修改，更多详细细节可以访问 <a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="external">不蒜子 不如</a>。</p>
<h6 id="打赏页面"><a href="#打赏页面" class="headerlink" title="打赏页面"></a>打赏页面</h6><p>修改为不显示，常来看看就好，哈哈哈哈哈。。</p>
<h3 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h3><p>也可自己构建一个博客主题，分享然后再github上建一个仓库，别人再git clone 下来使用你的主题。经常不知道如何写文章，因为害怕写开头。。哈哈哈。。搭建博客，也是为了总结学过的知识，一方面可以提供交流，也因为总会忘，顺便巩固看过的东西，管理仓库，梳理技术。<br>最后，遇到其他问题，欢迎提问交流~</p>
]]></content>
      
        <categories>
            
            <category> 感想 </category>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>

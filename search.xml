<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[vue-cli多页面脚手架]]></title>
      <url>https:noodle-xia.github.io/blog/blog/2017/03/20/My-New-Post/</url>
      <content type="html"><![CDATA[<p> 学习使用vue-cli多页面脚手架<br><a id="more"></a></p>
<h2 id="关于vue-cli"><a href="#关于vue-cli" class="headerlink" title="关于vue-cli"></a>关于vue-cli</h2><p><code>Vue-cli</code>是vue官方提供的一个命令行工具（vue-cli），可用于快速搭建大型单页应用。（之前体验学习<code>vue.js</code>一段时间，慢慢开始接触使用vue-cli多页面脚手架）。帮助你快速开始一个vue项目，其实其本质就是给你一套文件结构，包含基础的依赖库，你只需要<code>npm install</code>一下就可以安装。让你不需要为编译或其他琐碎的事情而浪费时间，这并不会限制到你的发挥。（看到有人好像是这么解释的，很赞同这个答案）</p>
<h2 id="学习vue之旅"><a href="#学习vue之旅" class="headerlink" title="学习vue之旅"></a>学习vue之旅</h2><p>相关学习博客链接:<a href="https://segmentfault.com/a/1190000007124470" target="_blank" rel="external">Vue2.0新手完全填坑攻略—从环境搭建到发布</a> </p>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># install dependencies</div><div class="line">npm install</div><div class="line"></div><div class="line"># serve with hot reload at localhost:8080/module/index.html</div><div class="line">npm run dev   //运行</div><div class="line"></div><div class="line"># build for production with minification</div><div class="line">npm run build   //打包</div></pre></td></tr></table></figure>
<p>输入完命令<code>npm run dev</code>会自动启动浏览器，自动启动浏览器就会看到vue图标的界面了 如</p>
<p><img src="http://onh2yw93k.bkt.clouddn.com/005.png" alt=""></p>
<p><code>npm run build</code>是项目打包命令，运行这个命令后会生成可以进行上线的打包文件，这时候打开根目录（dist）下的index.html就可以直接看到你的项目效果了。<br>在使用 <code>atom</code> 编辑时进一步认识atom编辑器与<code>subline</code>的区别，另外在打开<code>IDE</code>这一项时，使用atom打开项目需要安装 Vue 语法高亮的插件，使项目代码可读性更好。添加插件方法：<br>在atom编辑页面选项栏中点击<code>Packages</code>，选择<code>Settings View</code>——&gt; <code>Install Packages/Themes</code>,然后搜索需要添加的插件，如图：<br><img src="http://onh2yw93k.bkt.clouddn.com/006.png" alt=""></p>
<h3 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h3><p>哈哈 之前看博客教程里提到有需要填的坑，自己没在意，直接看下面的了，现在果然跳进去了，当自己试着打包别人做好的项目时，出现<code>cannot find module &#39;clean-webpack-plugin&#39;</code>里面确实提醒了少哪个插件下哪个。。哈哈<br>慢慢来。。加油！</p>
<ul>
<li><strong>下一步</strong><br>通过学习vue-cli多页面脚手架和别人的demo 尝试搭建自己的多页面个人主页</li>
</ul>
]]></content>
      
        <categories>
            
            <category> code </category>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vue </tag>
            
            <tag> 前端框架 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vue学习体验（2）-笔记]]></title>
      <url>https:noodle-xia.github.io/blog/blog/2017/03/13/vue%E5%AD%A6%E4%B9%A0%E4%BD%93%E9%AA%8C%EF%BC%882%EF%BC%89-%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>之前练习了一些从模型数据到视图的单向绑定，这次运用 v-model指令实现视图到模型的一个传递，依然结合jQuery的一些实现方法进行比较，加深自己的理解。<br><a id="more"></a><br><strong>代码部分：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;title&gt;02&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;div id=&quot;app&quot;&gt;</div><div class="line">    &lt;input type=&quot;text&quot; v-model=&quot;msg&quot;&gt; &lt;!--显示input输入的内容--&gt;</div><div class="line">    &lt;h1&gt;&#123;&#123;msg&#125;&#125;&lt;/h1&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;!--&lt;script type=&quot;text/javascript&quot; &gt;  --&gt;</div><div class="line">&lt;!--//用jqury实现要达到的需求--&gt;</div><div class="line">&lt;!--//$(&apos;input&apos;).on(&apos;keydown&apos;,function (e) &#123;   --&gt;</div><div class="line">    &lt;!--//在jQuery中获取input元素--&gt;</div><div class="line">    &lt;!--//其他获取方式  1、this 2、e.target    --&gt;</div><div class="line">&lt;!--//    console.log(e.target)--&gt;</div><div class="line">    &lt;!--//获取Input的值 var val=e.target.value   --&gt;</div><div class="line">&lt;!--//    var val =$(this).val();  --&gt;</div><div class="line">&lt;!--// 或者   $(&apos;h1&apos;&apos;).html(val)   --&gt;</div><div class="line">&lt;!--&#125;)--&gt;</div><div class="line">&lt;script src=&quot;vue.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">var app=new Vue(&#123;</div><div class="line">   el:&apos;#app&apos;,</div><div class="line">   data:&#123;</div><div class="line">       msg:&apos;0922&apos;</div><div class="line">   &#125;</div><div class="line">&#125;)</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<p><strong>理解及总结：</strong><br>  开始练习了一些是模型数据通过vue的data属性实现数据到vue的一个绑定，此时数据更新会被vue监听渲染给视图，现在运用的<code>v-model</code>指令则是实现了视图到vue实例化对象的一个数据传递，假若视图更新，vue就会捕捉到，就会传递给模型数据。<br>（<code>v-model</code>的属性值是一个js作用域，也就是一个js环境，在其中添加属性值就是添加Vue实例化对象的变量。有点绕口。。。。哈哈哈）</p>
]]></content>
      
        <categories>
            
            <category> code </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vue </tag>
            
            <tag> 前端框架 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vue初体验]]></title>
      <url>https:noodle-xia.github.io/blog/blog/2017/03/09/vue%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      <content type="html"><![CDATA[<p>简单的学习了一点Vue（mvvm模型），通过与原生js和jQuery写法相比较体验Vue的方便，条理清晰，不会使项目显得杂乱。实现数据到视图的双向绑定。<br><a id="more"></a><br>  代码部分：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">    &lt;html lang=&quot;en&quot;&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">        &lt;title&gt;01&lt;/title&gt;</div><div class="line">        &lt;script src=&quot;jquery-3.1.1.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">        &lt;script src=&quot;vue.js&quot;&gt;&lt;/script&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">    &lt;div id=&quot;a&quot;&gt;&#123;&#123;msg&#125;&#125;&lt;/div&gt;</div><div class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">        var data =&#123;</div><div class="line">            msg:&quot;你绝望了么？？&quot;</div><div class="line">        &#125;</div><div class="line">        data.msg=&quot;致胜一击 只要心够决！！&quot;</div><div class="line">    //    data.msg=&quot;致胜一击 只要心够决！！&quot;</div><div class="line">    //    document.getElementById(&quot;a&quot;).innerHTML=data.msg;</div><div class="line">        //原生js写法。。</div><div class="line">    //    document.getElementById(&quot;a&quot;).innerHTML=data.msg;</div><div class="line">    //    $(&quot;#a&quot;).html(data.msg).html(data.msg)</div><div class="line">        //jQury写法。。</div><div class="line">        //创建vue实例化对象，（vm对象——绑定视图和数据..）</div><div class="line">    new Vue(&#123;</div><div class="line">       //绑定视图</div><div class="line">      el:&quot;#a&quot;,</div><div class="line">       //绑定数据</div><div class="line">       data:data,</div><div class="line">   &#125;)</div><div class="line">        data.msg=&quot;致胜一击 只要心够决！！&quot;</div><div class="line">    &lt;/script&gt;</div><div class="line">    &lt;/body&gt;</div><div class="line">    &lt;/html&gt;</div><div class="line">---</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> code </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vue </tag>
            
            <tag> 前端框架 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[个人博客]]></title>
      <url>https:noodle-xia.github.io/blog/blog/2017/03/06/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p>个人博客更新日志<br><a id="more"></a></p>
<h3 id="开头"><a href="#开头" class="headerlink" title="开头"></a>开头</h3><p>根据hexo＋github搭建，因为追求新鲜自己选用了三个主题，目前使用的是相对简洁 <code>jackman</code>,另外两个是<code>Yilia</code> <a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">点击链接</a> 、 <code>yumemor</code> <a href="https://github.com/yumemor" target="_blank" rel="external">点击链接</a> ， 个人比较喜欢yumemor。<br>开始搭建博客很顺利，在选用主题是花费了不少功夫，起初按照<a href="https://github.com/wuchong/jacman" target="_blank" rel="external">Jacman</a> 这一主题一步步更新内容，修改样式，在主题<code>themes</code>文件中修改字体、文字及section的颜色、banner图片、微博秀等等。  </p>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd themes/jacman</div><div class="line">git pull origin master</div></pre></td></tr></table></figure>
<p>是更新主题命令<br><code>hexo g</code> 是更新博客命令<br><code>hexo new &quot;文件名&quot;</code> 是新建文件名<br>上传部署到github   <code>hexo deploy</code>（或<code>hexo d</code>）<br>搭建完成之后，这几个命令也是我经常使用的， 学习使用了很长时间git应用，有时间总结一下经常用的的git命令，以便使用。。。。</p>
<h3 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h3><p>经常不知道如何写文章，因为害怕写开头。。哈哈哈。。搭建博客，也是为了总结学过的知识，一方面可以提供交流，也因为总会忘，顺便巩固看过的东西，管理仓库，梳理技术。</p>
]]></content>
      
        <categories>
            
            <category> 感想 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
